definitions:
  models.Capture:
    properties:
      captureID:
        type: string
      instances:
        items:
          $ref: '#/definitions/models.Instance'
        type: array
      notes:
        type: string
      timesFound:
        type: integer
      userID:
        type: string
    type: object
  models.Instance:
    properties:
      dateFound:
        type: string
      latitude:
        type: number
      location:
        type: string
      longitude:
        type: number
      s3Key:
        type: string
    type: object
  routes.AddCaptures.AddCapturesInputStruct:
    properties:
      captures:
        items:
          properties:
            captureID:
              type: string
            instances:
              items:
                $ref: '#/definitions/models.Instance'
              type: array
            notes:
              type: string
          type: object
        type: array
    type: object
  routes.GetCapture.GetCaptureOutputStruct:
    properties:
      capture:
        $ref: '#/definitions/models.Capture'
    type: object
  routes.PostAuths.AuthEmailInputStruct:
    properties:
      email:
        type: string
    type: object
  routes.PostAuths.AuthEmailOutputStruct:
    properties:
      codeExpiry:
        type: string
    type: object
  routes.RegisterUser.RegisterInputStruct:
    properties:
      code:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
host: <some url>
info:
  contact: {}
  description: API for Polyamanita server functions
  title: Polyamanita API
  version: "1.0"
paths:
  /auths:
    post:
      consumes:
      - application/json
      description: Sends an email to the address passed in with a verification code
        to verify their email
      parameters:
      - description: Email address to send code to
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/routes.PostAuths.AuthEmailInputStruct'
      produces:
      - application/json
      responses:
        "200":
          description: Expiry time of code
          schema:
            $ref: '#/definitions/routes.PostAuths.AuthEmailOutputStruct'
        "500":
          description: Internal Server Error
      summary: Send a Verification Code
      tags:
      - Auth
  /session:
    delete:
      description: Just deletes the cookie the user was using to login
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Logs user out of account
      tags:
      - Auth
  /users:
    post:
      consumes:
      - application/json
      description: Registers the user with input data to DDB
      parameters:
      - description: User Data and code from email
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/routes.RegisterUser.RegisterInputStruct'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "500":
          description: Internal Server Error
      summary: Registers a User
      tags:
      - Users
  /users/:UserID/captures:
    post:
      consumes:
      - application/json
      description: Gets a list of mushrooms to add as captures to the user journal
      parameters:
      - description: info to add and update the capture with. Will NOT overwrite notes
          if notes already exist. Instances will append
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/routes.AddCaptures.AddCapturesInputStruct'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      summary: Add a new list of captures to the user
      tags:
      - Auth
  /users/:UserID/captures/:CaptureID:
    get:
      consumes:
      - application/json
      description: Gets all relevant information about a mushroom that's been captured
        for a user
      produces:
      - application/json
      responses:
        "200":
          description: mushroom information
          schema:
            $ref: '#/definitions/routes.GetCapture.GetCaptureOutputStruct'
        "500":
          description: Internal Server Error
      summary: Get information about a captured mushroom
      tags:
      - Auth
swagger: "2.0"
